- name: "download_hashicorp_gpg_key"
  become: true
  ansible.builtin.get_url:
    url: "https://apt.releases.hashicorp.com/gpg"
    dest: "/usr/share/keyrings/hashicorp-archive-keyring.asc"
    checksum: "sha256:cafb01beac341bf2a9ba89793e6dd2468110291adfbb6c62ed11a0cde6c09029"

- name: "install_hashicorp_apt_repo"
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.asc] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
    filename: "hashicorp"
    state: "present"

- name: "install_specific_nomad_version"
  become: true
  ansible.builtin.apt:
    name: "nomad={{ nomad_pkg_version }}"
    state: "present"
    update_cache: true
  when: nomad_pkg_version | length > 0

- name: "install_latest_nomad_version"
  become: true
  ansible.builtin.apt:
    name: "nomad"
    state: "present"
    update_cache: true
  when: nomad_pkg_version| length == 0

- name: "stat_log_file"
  stat: path="{{ nomad_log_file }}"
  register: log_file

- name: "create_log_file"
  become: true
  ansible.builtin.file:
    state: touch
    path: "{{ nomad_log_file }}"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0750"
  when: not log_file.stat.exists

- name: "create_data_dir"
  become: true
  ansible.builtin.file:
    path: "{{ nomad_data_dir }}"
    state: directory
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0755"

- name: "create_config_dir"
  become: true
  ansible.builtin.file:
    path: "{{ nomad_config_dir }}"
    state: directory
    mode: "0755"

- name: "delete_default_nomad_config_file"
  become: true
  ansible.builtin.file:
    path: "/etc/nomad.d/nomad.hcl"
    state: absent

- name: "create_base_config_file"
  become: true
  ansible.builtin.template:
    src: "base.hcl.j2"
    dest: "{{ nomad_config_dir }}/base.hcl"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0655"
  notify:
    - "restart_nomad"

- name: "create_server_config_file"
  become: true
  ansible.builtin.template:
    src: "server.hcl.j2"
    dest: "{{ nomad_config_dir }}/server.hcl"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0655"
  when: nomad_server_enabled is true
  notify:
    - "restart_nomad"

- name: "create_client_config_file"
  become: true
  ansible.builtin.template:
    src: "client.hcl.j2"
    dest: "{{ nomad_config_dir }}/client.hcl"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0655"
  when: nomad_client_enabled is true
  notify:
    - "restart_nomad"

- name: "host_volume"
  ansible.builtin.include_tasks:
    file: host_volume.yaml

- name: "tls_configuration"
  ansible.builtin.include_tasks:
    file: tls.yaml
  when: nomad_tls_enable | bool

- name: "nomad_custom_install"
  become: true
  block:
    - name: "remove_nomad_package"
      ansible.builtin.package:
        name: "nomad"
        state: absent
    - name: "remove_nomad_binary"
      ansible.builtin.file:
        path: "{{ nomad_install_dir }}/nomad"
        state: absent
    - name: "copy_nomad_binary"
      ansible.builtin.copy:
        src: "{{  nomad_custom_binary_source }}"
        dest: "{{ nomad_install_dir }}/nomad"
        owner: root
        group: root
        mode: '0751'
  when: nomad_custom_binary_source != ""
  notify:
    - "restart_nomad"
  tags:
    - "never"
    - "custom_build"

- name: "start_nomad_service"
  become: true
  ansible.builtin.service:
    name: "nomad"
    state: "started"
    enabled: true

- name: "acl_bootstrap"
  ansible.builtin.import_tasks:
    file: acl_bootstrap.yaml
  tags:
    - acl_bootstrap
    - never
