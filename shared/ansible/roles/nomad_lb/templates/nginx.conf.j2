upstream nomad {
{% for address in nomad_lb_server_ips %}
    server {{ address }}:4646;
{% endfor %}

    # Since WebSockets are stateful connections but Nomad has multiple
    # server nodes, an upstream with ip_hash declared is required to ensure
    # that connections are always proxied to the same server node when possible.
    ip_hash;
}

upstream influxdb {
{% for address in nomad_lb_client_ips %}
    server {{ address }}:8086;
{% endfor %}
}

server {
    listen 443 ssl;
    server_name _;

    ssl on;
    ssl_certificate         /etc/nginx/server.crt;
    ssl_certificate_key     /etc/nginx/server.key;
    ssl_trusted_certificate /etc/nginx/ca-certs.pem;

    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;

    ssl_prefer_server_ciphers       on;
    ssl_protocols                   TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                     ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

    add_header Strict-Transport-Security "max-age=31536000";

    location / {
        proxy_pass https://nomad;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Nomad blocking queries will remain open for a default of 5 minutes.
        # Increase the proxy timeout to accommodate this timeout with an
        # additional grace period.
        proxy_read_timeout 310s;

        # Nomad log streaming uses streaming HTTP requests. In order to
        # synchronously stream logs from Nomad to NGINX to the browser
        # proxy buffering needs to be turned off.
        proxy_buffering off;

        # The Upgrade and Connection headers are used to establish
        # a WebSockets connection.
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

server {
    listen 8086;
    server_name _;

    ssl on;
    ssl_certificate         /etc/nginx/server.crt;
    ssl_certificate_key     /etc/nginx/server.key;
    ssl_trusted_certificate /etc/nginx/ca-certs.pem;

    location / {
        proxy_pass http://influxdb;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
