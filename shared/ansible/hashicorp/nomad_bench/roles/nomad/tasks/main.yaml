# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

- name: "create_service_file"
  become: true
  ansible.builtin.template:
    src: "nomad.service.j2"
    dest: "/etc/systemd/system/nomad.service"
    owner: "root"
    group: "root"
    mode: "0755"
  notify:
    - "reload_systemd"

- name: "check_nomad_checksum_file"
  ansible.builtin.stat:
    path: "/tmp/nomad_{{ nomad_version }}_SHA256SUMS"
  become: false
  register: nomad_checksum

- name: "get_nomad_checksum_file"
  ansible.builtin.get_url:
    url: "{{ nomad_checksum_file_url }}"
    dest: "/tmp/nomad_{{ nomad_version }}_SHA256SUMS"
    mode: "0644"
  become: false
  when: not nomad_checksum.stat.exists

- name: "get_nomad_checksum"
  ansible.builtin.shell: |
    set -o pipefail
    grep "{{ nomad_package_name }}" "/tmp/nomad_{{ nomad_version }}_SHA256SUMS" | awk '{print $1}'
  args:
    executable: /bin/bash
  become: false
  register: nomad_sha256

- name: "stat_nomad_binary"
  stat:
    path: "{{ nomad_install_dir }}/nomad"
  register: nomad_binary

- name: "check_nomad_binary"
  ansible.builtin.command: "nomad version"
  register: nomad_binary_version
  become: false
  changed_when: false
  failed_when: false

- block:
  - name: "download_nomad_release_zip"
    ansible.builtin.get_url:
      url: "{{ nomad_release_zip_url }}"
      dest: "/tmp/nomad.zip"
      checksum: "sha256:{{ nomad_sha256.stdout }}"
      timeout: "60"
      mode: "600"
    become: false
  - name: "unzip_nomad_release"
    ansible.builtin.unarchive:
      remote_src: "yes"
      src: "/tmp/nomad.zip"
      dest: "/tmp/"
      owner: "root"
      group: "root"
      mode: "0755"
    become: true
  - name: "move_nomad_release_binary"
    ansible.builtin.copy:
      src: "/tmp/nomad"
      dest: "{{ nomad_install_dir }}/nomad"
      owner: "root"
      group: "root"
      mode: "0755"
      remote_src: true
    become: true
  - name: "remove_nomad_zip"
    ansible.builtin.file:
      path: "/tmp/nomad.zip"
      state: "absent"
  when: "not nomad_binary.stat.exists or nomad_binary_version is not defined or nomad_version|string not in nomad_binary_version.stdout"
  notify:
    - "restart_nomad"

- name: "stat_log_file"
  stat: path="{{ nomad_log_file }}"
  register: log_file

- name: "create_log_file"
  become: true
  ansible.builtin.file:
    state: touch
    path: "{{ nomad_log_file }}"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0750"
  when: not log_file.stat.exists

- name: "create_data_dir"
  become: true
  ansible.builtin.file:
    path: "{{ nomad_data_dir }}"
    state: directory
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0755"

- name: "create_config_dir"
  become: true
  ansible.builtin.file:
    path: "{{ nomad_config_dir }}"
    state: directory
    mode: "0755"

- name: "delete_default_nomad_config_file"
  become: true
  ansible.builtin.file:
    path: "/etc/nomad.d/nomad.hcl"
    state: absent

- name: "create_base_config_file"
  become: true
  ansible.builtin.template:
    src: "base.hcl.j2"
    dest: "{{ nomad_config_dir }}/base.hcl"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0655"
  notify:
    - "restart_nomad"

- name: "create_server_config_file"
  become: true
  ansible.builtin.template:
    src: "server.hcl.j2"
    dest: "{{ nomad_config_dir }}/server.hcl"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0655"
  when: nomad_server_enabled
  notify:
    - "restart_nomad"

- name: "create_client_config_file"
  become: true
  ansible.builtin.template:
    src: "client.hcl.j2"
    dest: "{{ nomad_config_dir }}/client.hcl"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0655"
  when: nomad_client_enabled
  notify:
    - "restart_nomad"

- name: "create_additional_nomad_config_file"
  become: true
  ansible.builtin.copy:
    content: "{{ nomad_config_extra }}"
    dest: "{{ nomad_config_dir }}/99-extra.hcl"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0655"
  when: nomad_config_extra != ""
  notify:
    - "restart_nomad"

- name: "host_volume"
  ansible.builtin.include_tasks:
    file: host_volume.yaml

- name: "tls_configuration"
  ansible.builtin.include_tasks:
    file: tls.yaml
  when: nomad_tls_enable | bool

- name: "nomad_custom_install"
  become: true
  block:
    - name: "remove_nomad_package"
      ansible.builtin.package:
        name: "nomad"
        state: absent
    - name: "remove_nomad_binary"
      ansible.builtin.file:
        path: "{{ nomad_install_dir }}/nomad"
        state: absent
    - name: "copy_nomad_binary"
      ansible.builtin.copy:
        src: "{{  nomad_custom_binary_source }}"
        dest: "{{ nomad_install_dir }}/nomad"
        owner: root
        group: root
        mode: '0751'
  when: nomad_custom_binary_source != ""
  notify:
    - "restart_nomad"
  tags:
    - "never"
    - "custom_build"

- name: "start_nomad_service"
  become: true
  ansible.builtin.service:
    name: "nomad"
    state: "started"
    enabled: true

- name: "acl_bootstrap"
  ansible.builtin.import_tasks:
    file: acl_bootstrap.yaml
  tags:
    - acl_bootstrap
    - never
